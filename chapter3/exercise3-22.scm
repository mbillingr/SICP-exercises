(import (builtin core)
        (sicp utils))

(define (make-queue)
  (let ((front-ptr '())
        (rear-ptr '()))
    (define (empty?)
      (null? front-ptr))
    (define (front)
      (if (empty?)
          (error "FRONT called with an empty queue")
          (car front-ptr)))
    (define (insert! item)
      (let ((new-pair (list item)))
        (cond ((empty?)
               (set! front-ptr new-pair)
               (set! rear-ptr new-pair))
              (else
                (set-cdr! rear-ptr new-pair)
                (set! rear-ptr new-pair)))))
    (define (delete!)
      (if (empty?)
          (error "DELETE! called with an empty queue")
          (set! front-ptr (cdr front-ptr))))
    (define (dispatch m)
      (cond ((eq? m 'front) (front))
            ((eq? m 'insert!) insert!)
            ((eq? m 'delete!) (delete!))
            ((eq? m 'as-list) front-ptr)
            (else (error "Unknown request -- MAKE-QUEUE" m))))
    dispatch))

(define (front-queue queue)
  (queue 'front))

(define (insert-queue! queue item)
  ((queue 'insert!) item)
  queue)

(define (delete-queue! queue)
  (queue 'delete!)
  queue)

(define (print-queue queue)
  (println (queue 'as-list)))

(define q1 (make-queue))
(print-queue (insert-queue! q1 'a))
(print-queue (insert-queue! q1 'b))
(print-queue (delete-queue! q1))
(print-queue (insert-queue! q1 'c))
(print-queue (delete-queue! q1))
(print-queue (delete-queue! q1))
